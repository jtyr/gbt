# List of OS names and their icons
GBT__SYMBOLS_AMZN='\001\e[38;5;208m\002'
GBT__SYMBOLS_ARCH='\001\e[38;5;25m\002'
GBT__SYMBOLS_ARCHARM='\001\e[38;5;125m\002'
GBT__SYMBOLS_CENTOS='\001\e[38;5;27m\002'
GBT__SYMBOLS_COREOS='\001\e[38;5;15m\002'
GBT__SYMBOLS_DARWIN='\001\e[38;5;15m\002'
GBT__SYMBOLS_DEBIAN='\001\e[38;5;88m\002'
GBT__SYMBOLS_DOCKER='\001\e[38;5;38m\002'
GBT__SYMBOLS_ELEMENTARY='\001\e[38;5;33m\002'
GBT__SYMBOLS_FEDORA='\001\e[38;5;32m\002'
GBT__SYMBOLS_FREEBSD='\001\e[38;5;1m\002'
GBT__SYMBOLS_GENTOO='\001\e[38;5;62m\002'
GBT__SYMBOLS_LINUX='\001\e[38;5;15m\002'
GBT__SYMBOLS_LINUXMINT='\001\e[38;5;47m\002'
GBT__SYMBOLS_MAGEIA='\001\e[38;5;24m\002'
GBT__SYMBOLS_MANDRIVA='\001\e[38;5;208m\002'
GBT__SYMBOLS_OPENSUSE='\001\e[38;5;113m\002'
GBT__SYMBOLS_RASPBIAN='\001\e[38;5;125m\002'
GBT__SYMBOLS_REDHAT='\001\e[38;5;1m\002'
GBT__SYMBOLS_SABAYON='\001\e[38;5;15m\002'
GBT__SYMBOLS_SLACKWARE='\001\e[38;5;15m\002'
GBT__SYMBOLS_UBUNTU='\001\e[38;5;166m\002'
#GBT__SYMBOLS_ALPINE='' # todo figure this one out


# Customize 'which' option for ZSH
[ "${SHELL##*/}" = "zsh" ] && export GBT__WHICH_OPTS='-p'

gbt__err() {
    echo "$@" >&2
}

gbt__get_bin() {
    local cmd="$1"

    local BIN=$(which "${GBT__WHICH_OPTS}" "${cmd}" 2>/dev/null)
    [ $? -ne 0 -o "$BIN" = "" ] && gbt__err "'$cmd' not found" && return 1

    echo "${BIN}"
}

gbt__get_symbol() {
    local symbol

    local docker=false
    if ! $(cat /proc/1/sched | head -n 1 | egrep '(init|systemd)'); then
        echo -n "$GBT__SYMBOLS_DOCKER"
        docker=true
    fi

    if [ "$(uname -s)" = 'Linux' ] && [ -e /etc/os-release ]; then
        source /etc/os-release
        symbol="$ID"
    else
        symbol="$(uname -s)"
    fi

    symbol="$(echo $symbol | tr '[:lower:]' '[:upper:]')"
    variable="GBT__SYMBOLS_$symbol"

    if [ "$docker" = true ]; then
        if [ -n "${!variable}" ]; then
            echo -n " > "
            echo "${!variable}"
        fi
    else
        echo "?"
    fi
}

gbt_docker() {
    local DOCKER_BIN="$(gbt__get_bin docker)"

    if [ "$1" != 'shell' ]; then
        $DOCKER_BIN "$@"
    else
        local GBT__CONTAINER_ID="${@: -1}"

        "${DOCKER_BIN}" cp "${GBT__CONF}" "${GBT__CONTAINER_ID}:$(dirname ${GBT__CONF})"
        "${DOCKER_BIN}" exec ${@:2:$(($# - 2))} -it "${GBT__CONTAINER_ID}" bash --rcfile "${GBT__CONF}"
        "${DOCKER_BIN}" exec ${@:2:$(($# - 2))} -it "${GBT__CONTAINER_ID}" rm -f "${GBT__CONF}" "${GBT__CONF}.bash"
    fi
}

gbt_mysql() {
    local MYSQL_BIN="$(gbt__get_bin mysql)"

    $MYSQL_BIN --prompt "$GBT__MYSQL_PS1" "$@"
}

gbt_su() {
    local SU_BIN="$(gbt__get_bin su)"

    $SU_BIN -s "${GBT__CONF}.bash" "$@"
}

gbt_sudo() {
    local SU_BIN="$(gbt__get_bin su)"
    local SUDO_BIN="$(gbt__get_bin sudo)"

    if [ "$1" != 'su' ]; then
        $SUDO_BIN "$@"
    else
        shift
        $SUDO_BIN $SU_BIN -s "${GBT__CONF}.bash" "$@"
    fi
}

gbt_ssh() {
    local SSH_BIN="$(gbt__get_bin ssh)"

    [ -z $SSH_BIN ] && return 1
    $SSH_BIN -t "$@" "
        cat /etc/motd 2>/dev/null;
        echo \"$(base64 ${GBT__CONF} | tr -d '\r\n')\" | base64 -d > ${GBT__CONF} &&
        bash --rcfile ${GBT__CONF};
        rm -f ${GBT__CONF} ${GBT__CONF}.bash"
}

gbt_vagrant() {
    local VAGRANT_BIN="$(gbt__get_bin vagrant)"

    if [ "$1" != 'ssh' ]; then
        $VAGRANT_BIN "$@"
    else
        shift
        $VAGRANT_BIN ssh --command "
            cat /etc/motd 2>/dev/null;
            echo \"$(base64 ${GBT__CONF} | tr -d '\r\n')\" | base64 -d > ${GBT__CONF} &&
            bash --rcfile ${GBT__CONF};
            rm -f ${GBT__CONF} ${GBT__CONF}.bash" "$@"
    fi
}

# Change the Sign depending on the user
if [ "$UID" = '0' ]; then
    export GBT__SIGN='\001\x1b[38;5;1m\002#'
    export GBT__USER="\001\x1b[38;5;9m\002"
else
    export GBT__SIGN='\001\x1b[38;5;10m\002$'
    export GBT__USER="\001\x1b[38;5;11m\002"
fi

# Customize OS icon
export GBT__OS="$(gbt__get_symbol)"

# Create executable that is used as shell in 'su'
if [ ! -e "${GBT__CONF}.bash" ]; then
    echo -e "#!/bin/bash\nbash --rcfile ${GBT__CONF} \"\$@\"" > "${GBT__CONF}.bash"
    chmod +x "${GBT__CONF}.bash"
fi

# Load remote custom profile if it exists
if [ -e ~/.gbt_profile ]; then
    source "$HOME/.gbt_profile"
fi
