# Customize 'which' option for ZSH
[ ${SHELL##*/} = 'zsh' ] && export GBT__WHICH_OPTS='-p'

function gbt__err() {
    echo "$@" >&2
}

gbt__get_bin() {
    local cmd="$1"

    local BIN=$(which "${GBT__WHICH_OPTS}" "${cmd}" 2>/dev/null)
    [ $? -ne 0 -o "$BIN" = "" ] && gbt__err "'$cmd' not found" && return 1

    echo "${BIN}"
}

function gbt__local_rcfile() {
    [ -z "$GBT__HOME" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__PROFILE" ] && local GBT__PROFILE="$GBT__HOME/sources/prompt_forwarding/remote"
    [ -z "$GBT__THEME_SSH" ] && local GBT__THEME_SSH="$GBT__HOME/themes/ssh/${GBT__THEME_SSH_NAME:=default}"
    [ -z "$GBT__THEME_MYSQL" ] && local GBT__THEME_MYSQL="$GBT__HOME/themes/mysql/${GBT__THEME_MYSQL_NAME:=default}"

    GBT__CONF="$(mktemp --suffix .gbt)"

    local gbt_aliases="$(alias | awk '/gbt_/ {sub(/^(alias )?(gbt___)?/, "", $0); print "alias "$0}')"
    local gbt_status="$(source "${GBT__THEME_SSH}"; GBT_CARS='Status, Custom1' gbt 1)"
    local gbt_mysql_ps1="$(source "${GBT__THEME_MYSQL}"; gbt)"
    local gbt_ps1="$(source "${GBT__THEME_SSH}"; gbt)"

    cat <<CONF > "${GBT__CONF}"
export GBT__CONF='${GBT__CONF}'

$(cat "${GBT__PROFILE}")
${gbt_aliases}
export GBT__STATUS='${gbt_status}'
export GBT__MYSQL_PS1='${gbt_mysql_ps1}'
PS1='${gbt_ps1}'
CONF

    cat <<ENTRY_SCRIPT > $GBT__CONF.bash
#!/usr/bin/env sh

if which \$GBT__WHICH_OPTS bash &>/dev/null; then
    bash --rcfile ${GBT__CONF} "\$@"
# sh does not show the unicode characters well in the prompt for some reason. Need to figure that out first.
# once that's figured out, this can be uncommented
elif which \$GBT__WHICH_OPTS sh &>/dev/null; then
    ENV=${GBT__CONF} sh "\$@"
else
    echo "Cannot use gbt prompt forwarding without either bash or sh installed."
    exit 1
fi
ENTRY_SCRIPT

    chmod +x "${GBT__CONF}.bash"

    echo "${GBT__CONF}"
}

# todo add kubectl exec/kubectl shell
function gbt_docker() {
    [ -z "$GBT__HOME" ] && gbt__err "'GBT__HOME' not defined" && return 1

    local DOCKER_BIN="$(gbt__get_bin docker)"

    # todo allow for usage of this in docker exec bash
    if [[ "$1" == 'shell' ]]; then
        local GBT__CONTAINER_ID="${@: -1}"
        local GBT__CONF=$(gbt__local_rcfile)

        # todo instead of using docker cp, we can simply exec everything
        # in one go similar to how ssh and vagrant do it.
        $DOCKER_BIN cp $GBT__CONF $GBT__CONTAINER_ID:$(dirname $GBT__CONF)
        $DOCKER_BIN cp $GBT__CONF.bash $GBT__CONTAINER_ID:$(dirname $GBT__CONF)
        $DOCKER_BIN exec ${@:2:$(($# - 2))} -it $GBT__CONTAINER_ID $GBT__CONF.bash
        $DOCKER_BIN exec ${@:2:$(($# - 2))} -it $GBT__CONTAINER_ID rm -f $GBT__CONF $GBT__CONF.bash

        rm -f $GBT__CONF $GBT__CONF.bash
        unset GBT__CONF
    else
        $DOCKER_BIN "$@"
    fi
}

function gbt_mysql() {
    [ -z "$GBT__HOME" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__THEME_MYSQL" ] && local GBT__THEME_MYSQL="$GBT__HOME/themes/mysql/${GBT__THEME_MYSQL_NAME:=default}"

    local MYSQL_BIN="$(gbt__get_bin mysql)"

    $MYSQL_BIN --prompt "$(source $GBT__THEME_MYSQL; gbt)" "$@"
}

function _get_ssh_cmd() {
    [ -z "$GBT__HOME" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__PROFILE" ] && local GBT__PROFILE="$GBT__HOME/sources/prompt_forwarding/remote"
    [ -z "$GBT__THEME_SSH" ] && local GBT__THEME_SSH="$GBT__HOME/themes/ssh/${GBT__THEME_SSH_NAME:=default}"
    [ -z "$GBT__THEME_MYSQL" ] && local GBT__THEME_MYSQL="$GBT__HOME/themes/mysql/${GBT__THEME_MYSQL_NAME:=default}"

    profile="$(base64 $GBT__PROFILE | tr -d '\r\n')"
    aliases="$(alias | awk '/gbt_/ {sub(/^(alias )?(gbt___)?/, "", $0); print "alias "$0}' | base64 | tr -d '\r\n')"
    status="$(source $GBT__THEME_SSH; GBT_SHELL='bash' GBT_CARS='Status, Custom1' gbt 1 | base64 | tr -d '\r\n')"
    mysql_ps1="$(source $GBT__THEME_MYSQL; gbt | base64 | tr -d '\r\n')"
    ps1="$(source $GBT__THEME_SSH; gbt | base64 | tr -d '\r\n')"

    cat <<ENTRY_SCRIPT
set -e
cat /etc/motd 2>/dev/null
export GBT__CONF='$(mktemp --suffix .gbt)'

echo "export GBT__CONF='\$GBT__CONF'" > \$GBT__CONF
echo '${profile}' | base64 -d >> \$GBT__CONF
echo '${aliases}' | base64 -d >> \$GBT__CONF
echo "export GBT__STATUS='\$(echo -n '${status}' | base64 -d)'" >> \$GBT__CONF
echo "export GBT__MYSQL_PS1='\$(echo -n '${mysql_ps1}' | base64 -d)'" >> \$GBT__CONF
echo "PS1='\$(echo -n '${ps1}' | base64 -d)'" >> \$GBT__CONF

if which bash &>/dev/null; then
   bash --rcfile \$GBT__CONF "\$@"
# sh does not show the unicode characters well in the prompt for some reason. Need to figure that out first.
# once that's figured out, this can be uncommented
elif which sh &>/dev/null; then
    ENV=\$GBT__CONF sh "\$@"
else
    echo "Cannot use gbt prompt forwarding without either bash or sh installed."
    exit 1
fi

rm -f \$GBT__CONF \$GBT__CONF.bash
ENTRY_SCRIPT
}

function gbt_ssh() {
    [ -z "$GBT__HOME" ] && gbt__err "'GBT__HOME' not defined" && return 1

    local SSH_BIN="$(gbt__get_bin ssh)"

    if [[ " ${GBT__SSH_IGNORE[*]} " == *" ${@: -1} "* ]]; then
        $SSH_BIN "$@"
    else
        $SSH_BIN -t "$@" "$(_get_ssh_cmd)"
    fi
}

function gbt_su() {
    local SU_BIN="$(gbt__get_bin su)"

    local GBT__CONF=$(gbt__local_rcfile)

    $SU_BIN -s "$GBT__CONF.bash" "$@"

    rm -f $GBT__CONF $GBT__CONF.bash
}

function gbt_sudo() {
    local SU_BIN="$(gbt__get_bin su)"
    local SUDO_BIN="$(gbt__get_bin sudo)"

    if [ "$1" != 'su' ]; then
        $SUDO_BIN "$@"
    else
        local GBT__CONF=$(gbt__local_rcfile)

        shift
        $SUDO_BIN $SU_BIN -s "$GBT__CONF.bash" "$@"
    fi

    rm -f $GBT__CONF $GBT__CONF.bash
}

function gbt_vagrant() {
    [ -z "$GBT__HOME" ] && gbt__err "'GBT__HOME' not defined" && return 1

    local VAGRANT_BIN="$(gbt__get_bin vagrant)"

    if [ "$1" != 'ssh' ]; then
        $VAGRANT_BIN "$@"
    else
        shift
        $VAGRANT_BIN ssh --command "$(_get_ssh_cmd)" "$@"
    fi
}
